version: "3"

services:
  frontend:
    depends_on:
      - backend
      - db
    container_name: frontend
    hostname: frontend
    build: ./srcs/frontend
    image: frontend:${TAG}
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NEXT_PUBLIC_FRONT_URL=${NEXT_PUBLIC_FRONT_URL}
      - NEXT_PUBLIC_API_URL=http://backend:5000
    networks:
      - docker-network

  backend:
    depends_on:
      db:
        condition: service_healthy
    container_name: backend
    hostname: backend
    build: ./srcs/backend
    image: backend:${TAG}
    ports:
      - "5000:5000"
      - "5555:5555" # for Prisma Studio
    restart: always
    environment:
      - NEXT_PUBLIC_FRONT_URL=${NEXT_PUBLIC_FRONT_URL}
      - FORTY_TWO_CLIENT_ID=${FORTY_TWO_CLIENT_ID}
      - FORTY_TWO_CLIENT_SECRET=${FORTY_TWO_CLIENT_SECRET}
      - FORTY_TWO_CALLBACK_URL=${FORTY_TWO_CALLBACK_URL}
      - JWT_SECRET=${JWT_SECRET}
      - AUTH2FA_SECRET=${AUTH2FA_SECRET}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
    networks:
      - docker-network

  db:
    container_name: db
    hostname: postgres
    build: ./srcs/db
    image: db:${TAG}
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - DB:/var/lib/postgresql/data
    networks:
      - docker-network

volumes:
  DB:

networks:
  docker-network:
    driver: bridge
